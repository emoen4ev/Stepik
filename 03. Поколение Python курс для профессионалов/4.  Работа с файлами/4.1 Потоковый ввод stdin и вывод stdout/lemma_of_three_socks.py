"""
Лемма о трёх носках

Анри и Дима, имея на руках ящик с бесконечным количеством носков, решили сыграть в игру.
Ребята по очереди достают из ящика произвольное количество носков,
и после неопределенного числа ходов игра заканчивается.
Если тот, кто сделал последний ход, вытащил четное количество носков — он побеждает, в противном случае проигрывает.

Напишите программу, которая определяет победителя в данной игре, если первый ход делает Анри.

Формат входных данных:
На вход программе подается произвольное количество строк,
в каждой строке записано натуральное число — количество носков, которые вытащил один из игроков.

Формат выходных данных:
Программа должна определить победителя в игре, правила которой представлены в условии задачи, и вывести его имя.

Примечание 1. Рассмотрим первый тест. Распишем ходы игроков:

Анри — 1
Дима — 3
Анри — 5
Дима — 10
Анри — 3
Дима — 2
Анри — 12

Побеждает Анри, так как он делает последний ход и при этом достает четное количество носков.
Причем общее количество не важно, важно лишь количество в последнем ходе.
"""

# from sys import stdin

# # data = [int(line.strip()) for line in stdin]
#
# data = list(map(int, stdin))
#
# penultimate, last = 'Анри', 'Дима'
#
# if len(data) % 2 != 0:
#     penultimate, last = last, penultimate
#
# result = penultimate
#
# if data[-1] % 2 == 0:
#     result = last
#
# print(result)
#
# # print(('Дима', 'Анри')[(len(data) - 1) % 2 == data[-1] % 2])

# ----------------------------------------------------------------

from sys import stdin

winner_idx = None
flag = True

while True:
    line = stdin.readline()

    if not line:
        break
    elif line == '\n':
        continue

    current_number_is_even = not int(line) & 1
    flag = not flag
    winner_idx = flag if current_number_is_even else not flag

if winner_idx is not None:
    print(['Анри', 'Дима'][winner_idx])
else:
    print('No data entered!')
    quit()

'''
Sample Input 1:
1
3
5
10
3
2
12

Sample Output 1:
Анри

----------------------------------------------------------------

Sample Input 2:
2
58

Sample Output 2:
Дима
'''